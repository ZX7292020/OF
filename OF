local library = {}

local TweenService = game:GetService("TweenService")
local TextService = game:GetService("TextService")
local UserInputService = game:GetService("UserInputService")

function dragify(Frame)
    local dragToggle = nil
    local dragSpeed = .25
    local dragInput = nil
    local dragStart = nil
    local dragPos = nil

    function updateInput(input)
        Delta = input.Position - dragStart
        Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
        game:GetService("TweenService"):Create(Frame, TweenInfo.new(.25), {Position = Position}):Play()
    end

    Frame.InputBegan:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
            dragToggle = true
            dragStart = input.Position
            startPos = Frame.Position
            input.Changed:Connect(function()
                if (input.UserInputState == Enum.UserInputState.End) then
                    dragToggle = false
                end
            end)
        end
    end)

    Frame.InputChanged:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if (input == dragInput and dragToggle) then
            updateInput(input)
        end
    end)
end

for i,v in pairs(game.CoreGui:GetChildren()) do
    if v.Name == "Kronos" then 
        v:Destroy()
    end
end

function library:Window(options)
    local TitleUI = options.Title or "Kronos Lib"
    local Accent = options.Accent or Color3.fromRGB(69, 69, 207)
    local Logo = options.Logo or '3610245066'
    local Toggle_Key = options.ToggleKey or Enum.KeyCode.LeftBracket

    local Kronos = Instance.new("ScreenGui")
    Kronos.Name = "Kronos"
    Kronos.Parent = game.CoreGui
    Kronos.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local Mover = Instance.new("Frame")
    Mover.Name = "Mover"
    Mover.Parent = Kronos
    Mover.BackgroundColor3 = Color3.fromRGB(44, 43, 48)
    Mover.BackgroundTransparency = 1.000
    Mover.BorderSizePixel = 0
    Mover.Position = UDim2.new(0.274229079, 0, 0.191011235, 0)
    Mover.Size = UDim2.new(0, 70, 0, 400)

    dragify(Mover)

    local Main = Instance.new("Frame")
    Main.Name = "Main"
    Main.Parent = Mover
    Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Main.BackgroundTransparency = 1.000
    Main.BorderSizePixel = 0
    Main.Size = UDim2.new(0, 500, 0, 400)
    Main.ClipsDescendants = false

    local Main_Layout = Instance.new("UIListLayout")
    Main_Layout.Name = "Main_Layout"
    Main_Layout.Parent = Main
    Main_Layout.FillDirection = Enum.FillDirection.Horizontal

    local _1LeftSide = Instance.new("Frame")
    _1LeftSide.Name = "1LeftSide"
    _1LeftSide.Parent = Main
    _1LeftSide.BackgroundColor3 = Color3.fromRGB(44, 43, 48)
    _1LeftSide.Size = UDim2.new(0, 70, 0, 400)
    _1LeftSide.ClipsDescendants = false

    local leftside_corner = Instance.new("UICorner")
    leftside_corner.CornerRadius = UDim.new(0, 6)
    leftside_corner.Name = "leftside_corner"
    leftside_corner.Parent = _1LeftSide

    local hider_2 = Instance.new("Frame")
    hider_2.Name = "hider"
    hider_2.Parent = _1LeftSide
    hider_2.BackgroundColor3 = Color3.fromRGB(44, 43, 48)
    hider_2.BorderSizePixel = 0
    hider_2.Position = UDim2.new(0.914285719, 0, 0, 0)
    hider_2.Size = UDim2.new(0, 6, 0, 400)

    local Main_Logo = Instance.new("ImageButton")
    Main_Logo.Name = "Main_Logo"
    Main_Logo.Parent = _1LeftSide
    Main_Logo.BackgroundTransparency = 1.000
    Main_Logo.Position = UDim2.new(0.242857158, 0, 0.0225000009, 0)
    Main_Logo.Size = UDim2.new(0, 35, 0, 35)
    Main_Logo.Image = "rbxassetid://" .. tostring(Logo)
    Main_Logo.ImageColor3 = Accent
    Main_Logo.ScaleType = Enum.ScaleType.Fit

    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Parent = Main_Logo
    Title.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    Title.BackgroundTransparency = 1.000
    Title.BorderSizePixel = 0
    Title.Position = UDim2.new(-0.485714316, 0, -1.08571434, 0)
    Title.Size = UDim2.new(0, 200, 0, 20)
    Title.Font = Enum.Font.Gotham
    Title.Text = TitleUI
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 14.000
    Title.TextTransparency = 1.000

    local TitleSize = TextService:GetTextSize(TitleUI, 12, Enum.Font.Gotham, Vector2.new(9e9, 20))
    Title.Size = UDim2.new(0, TitleSize.X + 70, 0, 20)

    Main_Logo.MouseEnter:Connect(function()
        TweenService:Create(Title, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0}):Play()
        TweenService:Create(Title, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {TextTransparency = 0}):Play()
    end)

    Main_Logo.MouseLeave:Connect(function()
        TweenService:Create(Title, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play()
        TweenService:Create(Title, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {TextTransparency = 1}):Play()
    end)

    local title_corner = Instance.new("UICorner")
    title_corner.Name = "title_corner"
    title_corner.Parent = Title

    local Tabs = Instance.new("ScrollingFrame")
    Tabs.Name = "Tabs"
    Tabs.Parent = _1LeftSide
    Tabs.Active = true
    Tabs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Tabs.BackgroundTransparency = 1.000
    Tabs.BorderSizePixel = 0
    Tabs.Position = UDim2.new(0.142857228, 0, 0.202500001, 0)
    Tabs.Size = UDim2.new(0, 50, 0, 280)
    Tabs.ScrollBarThickness = 0

    local tabs_layout = Instance.new("UIListLayout")
    tabs_layout.Name = "tabs_layout"
    tabs_layout.Parent = Tabs
    tabs_layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    tabs_layout.SortOrder = Enum.SortOrder.LayoutOrder
    tabs_layout.Padding = UDim.new(0, 3)

    local Toggle_Mid = Instance.new("ImageButton")
    Toggle_Mid.Name = "Toggle_Mid"
    Toggle_Mid.Parent = _1LeftSide
    Toggle_Mid.BackgroundTransparency = 1.000
    Toggle_Mid.Position = UDim2.new(0.319158435, 0, 0.914166689, 0)
    Toggle_Mid.Rotation = 180.000
    Toggle_Mid.Size = UDim2.new(0, 25, 0, 25)
    Toggle_Mid.Image = "rbxassetid://4370337241"
    Toggle_Mid.ScaleType = Enum.ScaleType.Fit

    local _2MiddleSide = Instance.new("Frame")
    _2MiddleSide.Name = "2MiddleSide"
    _2MiddleSide.Parent = Main
    _2MiddleSide.BackgroundColor3 = Color3.fromRGB(36, 36, 38)
    _2MiddleSide.BorderSizePixel = 0
    _2MiddleSide.Position = UDim2.new(0.140000001, 0, 0, 0)
    _2MiddleSide.Size = UDim2.new(0, 150, 0, 400)
    _2MiddleSide.ClipsDescendants = true

    local _3Container = Instance.new("Frame")
    _3Container.Parent = Main
    _3Container.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    _3Container.BorderSizePixel = 0
    _3Container.Position = UDim2.new(0.439999998, 0, 0, 0)
    _3Container.Size = UDim2.new(0, 280, 0, 400)
    _3Container.ClipsDescendants = true
    _3Container.Name = "3Container"

    local container_corner = Instance.new("UICorner")
    container_corner.CornerRadius = UDim.new(0, 6)
    container_corner.Name = "container_corner"
    container_corner.Parent = _3Container

    local hider = Instance.new("Frame")
    hider.Name = "hider"
    hider.Parent = _3Container
    hider.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    hider.BorderSizePixel = 0
    hider.Size = UDim2.new(0, 6, 0, 400)

    local mid_toggle = false
    Toggle_Mid.MouseButton1Click:Connect(function()
        if mid_toggle == false then 
            mid_toggle = true
            TweenService:Create(Toggle_Mid, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = 360}):Play()
            TweenService:Create(_2MiddleSide, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Size = UDim2.new(0, 0, 0, 400)}):Play()
        else
            mid_toggle = false
            TweenService:Create(Toggle_Mid, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = 180}):Play()
            TweenService:Create(_2MiddleSide, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Size = UDim2.new(0, 150, 0, 400)}):Play()
        end
    end)

    tabs_layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        Tabs.CanvasSize = UDim2.new(0,0,0,tabs_layout.AbsoluteContentSize.Y) 
    end)

    local ui_toggle = false
    UserInputService.InputBegan:connect(function(key)
        if key.KeyCode == Toggle_Key then
            if ui_toggle == false then 
                ui_toggle = true
                Main.Visible = false
            else
                ui_toggle = false
                Main.Visible = true
            end
        end
    end)

    local TabsFunc = {}

    function TabsFunc:NewTab(options)
        local Logo = options.Logo or '4483345998'

        local tab_shell = Instance.new("TextButton")
        tab_shell.Name = "tab_shell"
        tab_shell.Parent = Tabs
        tab_shell.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tab_shell.BackgroundTransparency = 1
        tab_shell.Size = UDim2.new(0, 40, 0, 40)
        tab_shell.AutoButtonColor = false
        tab_shell.Font = Enum.Font.SourceSans
        tab_shell.Text = ""
        tab_shell.TextColor3 = Color3.fromRGB(0, 0, 0)
        tab_shell.TextSize = 14.000

        local tab_option = Instance.new("ImageLabel")
        tab_option.Name = "tab_option"
        tab_option.Parent = tab_shell
        tab_option.BackgroundTransparency = 1.000
        tab_option.Position = UDim2.new(0.174999997, 0, 0.174999997, 0)
        tab_option.Size = UDim2.new(0, 25, 0, 25)
        tab_option.Image = "rbxassetid://" .. tostring(Logo)
        tab_option.ScaleType = Enum.ScaleType.Fit

        local tabshell_corner = Instance.new("UICorner")
        tabshell_corner.Name = "tabshell_corner"
        tabshell_corner.Parent = tab_shell

        local middle_scroll = Instance.new("ScrollingFrame")
        middle_scroll.Name = "middle_scroll"
        middle_scroll.Parent = _2MiddleSide
        middle_scroll.Active = true
        middle_scroll.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        middle_scroll.BackgroundTransparency = 1.000
        middle_scroll.BorderSizePixel = 0
        middle_scroll.Position = UDim2.new(0.0799999982, 0, 0.0225000009, 0)
        middle_scroll.Size = UDim2.new(0, 125, 0, 380)
        middle_scroll.ScrollBarThickness = 0

        local middle_layout = Instance.new("UIListLayout")
        middle_layout.Name = "middle_layout"
        middle_layout.Parent = middle_scroll
        middle_layout.SortOrder = Enum.SortOrder.LayoutOrder
        middle_layout.Padding = UDim.new(0, 5)

        middle_layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            middle_scroll.CanvasSize = UDim2.new(0,0,0,middle_layout.AbsoluteContentSize.Y) 
        end)

        for i,v in pairs(_2MiddleSide:GetChildren()) do
            v.Size = UDim2.new(0,0,0,380)
        end

        tab_shell.MouseButton1Click:Connect(function()
            for i,v in next, Tabs:GetChildren() do 
                if v:IsA("TextButton") then 
                    TweenService:Create(v, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play()
                end
            end
            TweenService:Create(tab_shell, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0.950}):Play()

            for i,v in pairs(_2MiddleSide:GetChildren()) do
                TweenService:Create(v, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Size = UDim2.new(0, 0, 0, 380)}):Play()
            end

            for i,v in pairs(_3Container:GetChildren()) do 
                if v.Name == "NewPage" then 
                    TweenService:Create(v, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Size = UDim2.new(0, 0, 0, 400)}):Play()
                end
            end
            wait(.3)
            TweenService:Create(middle_scroll, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Size = UDim2.new(0, 125, 0, 380)}):Play()
            Extend_page()
        end)

        local mid_sections = {}

        function mid_sections:TabSection(options)
            local Title = options.Title or 'Tab Section'

            local Section_Header = Instance.new("TextButton")
            Section_Header.Name = "Section_Header"
            Section_Header.Parent = middle_scroll
            Section_Header.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Section_Header.BackgroundTransparency = 1.000
            Section_Header.BorderSizePixel = 0
            Section_Header.Size = UDim2.new(0, 125, 0, 30)
            Section_Header.AutoButtonColor = false
            Section_Header.Font = Enum.Font.Gotham
            Section_Header.Text = Title
            Section_Header.TextColor3 = Color3.fromRGB(150, 150, 150)
            Section_Header.TextSize = 14.000
            Section_Header.TextXAlignment = Enum.TextXAlignment.Left
            Section_Header.Text = Title

            local Toggle_Section = Instance.new("ImageLabel")
            Toggle_Section.Name = "Toggle_Section"
            Toggle_Section.Parent = Section_Header
            Toggle_Section.BackgroundTransparency = 1.000
            Toggle_Section.Position = UDim2.new(0.800000072, 0, 0.0666666552, 0)
            Toggle_Section.Rotation = 270.000
            Toggle_Section.Size = UDim2.new(0, 25, 0, 25)
            Toggle_Section.Image = "rbxassetid://4370337241"
            Toggle_Section.ImageColor3 = Color3.fromRGB(150, 150, 150)
            Toggle_Section.ScaleType = Enum.ScaleType.Fit

            local Section_Frame = Instance.new("Frame")
            Section_Frame.Name = "Section_Frame"
            Section_Frame.Parent = middle_scroll
            Section_Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Section_Frame.BackgroundTransparency = 1
            Section_Frame.Size = UDim2.new(0, 125, 0, 0)
            Section_Frame.ClipsDescendants = true

            local Section_Layout = Instance.new("UIListLayout")
            Section_Layout.Name = "Section_Layout"
            Section_Layout.Parent = Section_Frame
            Section_Layout.SortOrder = Enum.SortOrder.LayoutOrder
            Section_Layout.Padding = UDim.new(0, 5)

            local tab_toggled = false
            Section_Header.MouseButton1Click:Connect(function()
                if tab_toggled == false then 
                    tab_toggled = true 
                    TweenService:Create(Toggle_Section, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = 90}):Play()
                    TweenService:Create(Toggle_Section, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                    TweenService:Create(Section_Header, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                    TweenService:Create(Section_Frame, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Size = UDim2.new(0,125,0,Section_Layout.AbsoluteContentSize.Y)}):Play()
                else
                    tab_toggled = false
                    TweenService:Create(Toggle_Section, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = 270}):Play()
                    TweenService:Create(Toggle_Section, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {ImageColor3 = Color3.fromRGB(150, 150, 150)}):Play()
                    TweenService:Create(Section_Header, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(150, 150, 150)}):Play()
                    TweenService:Create(Section_Frame, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Size = UDim2.new(0,125,0,0)}):Play()
                end
            end)

            local columns = {}

            function columns:AddColumn(options)
                local Title = options.Title or 'New Column'

                local Sec_Option = Instance.new("TextButton")
                Sec_Option.Name = "Sec_Option"
                Sec_Option.Parent = Section_Frame
                Sec_Option.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Sec_Option.BackgroundTransparency = 1.000
                Sec_Option.Size = UDim2.new(0, 125, 0, 20)
                Sec_Option.Font = Enum.Font.Gotham
                Sec_Option.Text = Title
                Sec_Option.TextColor3 = Color3.fromRGB(150, 150, 150)
                Sec_Option.TextSize = 14.000

                local Sec_Frame = Instance.new("Frame")
                Sec_Frame.Name = "Sec_Frame"
                Sec_Frame.Parent = Sec_Option
                Sec_Frame.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
                Sec_Frame.BorderSizePixel = 0
                Sec_Frame.Position = UDim2.new(0.128000006, 0, 0.400000006, 0)
                Sec_Frame.Size = UDim2.new(0, 5, 0, 5)

                local Sec_Frame_Corner = Instance.new("UICorner")
                Sec_Frame_Corner.Name = "Sec_Frame_Corner"
                Sec_Frame_Corner.Parent = Sec_Frame

                local NewPage = Instance.new("Frame")
                NewPage.Name = "NewPage"
                NewPage.Parent = _3Container
                NewPage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                NewPage.BackgroundTransparency = 1.000
                NewPage.BorderSizePixel = 0
                NewPage.Size = UDim2.new(0, 280, 0, 400)
                NewPage.ClipsDescendants = true

                local page_name = Instance.new("TextLabel")
                page_name.Name = "page_name"
                page_name.Parent = NewPage
                page_name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                page_name.BackgroundTransparency = 1.000
                page_name.Position = UDim2.new(0.0428571478, 0, 0.0450000018, 0)
                page_name.Size = UDim2.new(0, 112, 0, 11)
                page_name.Font = Enum.Font.Gotham
                page_name.Text = Title
                page_name.TextColor3 = Color3.fromRGB(255, 255, 255)
                page_name.TextSize = 15.000
                page_name.TextXAlignment = Enum.TextXAlignment.Left

                local InnerPage = Instance.new("ScrollingFrame")
                InnerPage.Name = "InnerPage"
                InnerPage.Parent = NewPage
                InnerPage.Active = true
                InnerPage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                InnerPage.BackgroundTransparency = 1.000
                InnerPage.BorderSizePixel = 0
                InnerPage.Position = UDim2.new(0, 0, 0.109999999, 0)
                InnerPage.Size = UDim2.new(0, 280, 0, 345)
                InnerPage.ScrollBarThickness = 3

                local innerpage_layout = Instance.new("UIListLayout")
                innerpage_layout.Name = "innerpage_layout"
                innerpage_layout.Parent = InnerPage
                innerpage_layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
                innerpage_layout.SortOrder = Enum.SortOrder.LayoutOrder
                innerpage_layout.Padding = UDim.new(0, 5)

                for i,v in pairs(_3Container:GetChildren()) do 
                    if v.Name == "NewPage" then 
                        NewPage.Size = UDim2.new(0, 0, 0, 400)
                    end
                end

                getgenv().Extend_page = function()
                    wait(.3)
                    for i,v in next, Section_Frame:GetChildren() do
                        if v:IsA("TextButton") then
                            for i2, pname in next, _3Container:GetChildren() do 
                                if pname:FindFirstChild("page_name") then
                                    if v.Sec_Frame.BackgroundColor3 == Color3.fromRGB(255, 255, 255) and middle_scroll.Size == UDim2.new(0,125,0,380) then
                                        if v.Text == pname.page_name.Text and v.TextColor3 == Color3.fromRGB(255,255,255) then
                                            TweenService:Create(pname, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Size = UDim2.new(0, 280, 0, 400)}):Play()
                                        end
                                    end
                                end
                            end
                        end
                    end
                end

                Sec_Option.MouseButton1Click:Connect(function()
                    for i,v in pairs(Section_Frame:GetChildren()) do
                        if v:IsA("TextButton") then 
                            TweenService:Create(v, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(150, 150, 150)}):Play()
                            TweenService:Create(v.Sec_Frame, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundColor3 = Color3.fromRGB(150, 150, 150)}):Play()
                        end
                    end
                    TweenService:Create(Sec_Option, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                    TweenService:Create(Sec_Frame, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}):Play()

                    for i,v in pairs(_3Container:GetChildren()) do 
                        if v.Name == "NewPage" then 
                            TweenService:Create(v, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Size = UDim2.new(0, 0, 0, 400)}):Play()
                        end
                    end
                    wait(.3)
                    TweenService:Create(NewPage, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Size = UDim2.new(0, 280, 0, 400)}):Play()
                end)

                innerpage_layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                    InnerPage.CanvasSize = UDim2.new(0,0,0,innerpage_layout.AbsoluteContentSize.Y) 
                end)

                local frame_sections = {}

                function frame_sections:Section(options)
                    local Title = options.Title or "New Section"

                    local Section_Frame_2 = Instance.new("Frame")
                    Section_Frame_2.Name = "Section_Frame"
                    Section_Frame_2.Parent = InnerPage
